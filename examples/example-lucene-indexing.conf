{
  dictionary : [
    {
      class : org.nlp4l.framework.builtin.GenericDictionaryAttributeFactory
      settings : {
        name: "LuceneIndexingResultDict"
        attributes : [
          { name: "result" }
        ]
      }
    }
  ]

  processors : [
//    {
//      class : org.nlp4l.sample.SampleCsvImportProcessorFactory
//      settings : {
//        file:     "/opt/nlp4l/sample-input-data.csv"
//        encoding: "UTF-8"
//        fields: [
//          "docId",
//          "category",
//          "title",
//          "body"
//        ]
//      }
//    }

    // Take it easy,
    // We have another simple one to make our lives easier.
    {
      class : org.nlp4l.sample.SampleCsvDataProcessorFactory
      settings : {
        fields: [
          "docId",
          "category",
          "title",
          "body"
        ],
        data: [
          "DOC-001, cat-a, title-a, This is a body part of 001"
          "DOC-002, cat-b, title-b, This is a body part of 002"
          "DOC-003, cat-c, title-c, This is a body part of 003"
        ]
      }
    }
    {
      class : org.nlp4l.framework.builtin.lucene.LuceneIndexingProcessorFactory
      settings : {
        index:  "/opt/nlp4l/example-lucene-indexing"
        deleteAll: true
        optimize: true
        schemaDef: {
          schema {
            defAnalyzer {
              class : org.apache.lucene.analysis.standard.StandardAnalyzer
            }
            fields = [
              {
                name : id
                indexed : true
                stored : true
              }
              {
                name : cat
                indexed : true
                stored : true
              }
              {
                name : body
                analyzer : {
                  tokenizer {
                    factory : standard
                  }
                  filters = [
                    {
                      factory : lowercase
                    }
                  ]
                }
                indexed : true
                stored : true
                termVector : true
                positions : true
                offsets : true
              }
            ]
          }
        }
        fieldsMap: [
          { fieldName: "id",   cellName: "docId" },
          { fieldName: "cat",  cellName: "category" },
          { fieldName: "body", cellName: "body" }
        ]
      }
    }
  ]
}
